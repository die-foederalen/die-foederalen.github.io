{"version":3,"file":"7ecc2bc6-ce7a8318090671a01239.js","mappings":"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","sources":["webpack://foederalen-website/./src/pages/mitmachen.js"],"sourcesContent":["import React, {Component, useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from '@emotion/styled';\n\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\nimport DatePicker from 'components/DatePicker';\nimport IBAN from 'iban';\nimport {parsePhoneNumberFromString} from 'libphonenumber-js';\n//import DatePicker from 'react-bootstrap-date-picker';\n\nimport Flex from 'components/Flex';\nimport CTAButton from 'components/buttons/CTAButton';\n\nimport DefaultLayout from 'components/layouts/DefaultLayout';\nimport Title from 'components/Title';\nimport createUrl from 'utils/createUrl';\nimport navigation from '../../data/navigation/primary.yml';\n\nimport {Applications} from 'agent';\n\ntype Props = {};\n\nconst TitleRow = styled(Row)`\n  text-align: center;\n  max-width: 60rem;\n  margin: auto;\n`;\n\nconst ContentRow = styled(Row)`\n  text-align: center;\n  max-width: 60rem;\n  margin: auto;\n`;\n\nconst Text = styled.p`\n  font-size: large;\n`;\n\nconst today = new Date();\n\nconst schema = Yup.object({\n  gender: Yup.string()\n    .required('Die Anrede muss ausgewählt werden!')\n    .oneOf(['Frau', 'Herr', 'divers'], 'Die Anrede muss ausgewählt werden!'),\n  title: Yup.string()\n    .trim()\n    .max(50, 'Der Titel darf maximal 50 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Titel enthält ungültige Sonderzeichen!',\n    ),\n  firstName: Yup.string()\n    .required('Der Vorname muss angegeben werden!')\n    .trim()\n    .min(1, 'Der Vorname muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Der Vorname darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Name enthält ungültige Sonderzeichen!',\n    ),\n  lastName: Yup.string()\n    .required('Der Nachname muss angegeben werden!')\n    .trim()\n    .min(1, 'Der Nachname muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Der Nachname darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Nachname enthält ungültige Sonderzeichen!',\n    ),\n  email: Yup.string()\n    .required('Die E-Mail-Adresse muss angegeben werden!')\n    .email('Die E-Mail-Adresse ist ungültig!'),\n  birthDate: Yup.date()\n    .nullable()\n    .required('Das Geburtsdatum muss angegeben werden!')\n    .min(\n      new Date(1875, 1, 1, 0, 0, 0, 0),\n      'Das Geburtsjahr darf nicht vor 1875 liegen!',\n    )\n    .max(\n      new Date(\n        today.getFullYear() - 15,\n        today.getMonth(),\n        today.getDate(),\n        0,\n        0,\n        0,\n        0,\n      ),\n      'Eine Mitgliedschaft ist erst ab 16 Jahren möglich. Ein Antrag kann jedoch 1 Jahr vorher abgeschickt werden. Das Eintrittsdatum darf nicht vor dem 16. Geburtstag liegen.',\n    ),\n  street: Yup.string()\n    .required('Die Straße muss angegeben werden!')\n    .trim()\n    .min(1, 'Die Straße muss minestens 1 Zeichen lang sein!')\n    .max(100, 'Die Straße darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Die Straße enthält ungültige Sonderzeichen!',\n    ),\n  streetNumber: Yup.string()\n    .required('Die Hausnummer muss angegeben werden!')\n    .trim()\n    .min(1, 'Die Hausnummer muss mindestens ein Zeichen lang sein!')\n    .max(100, 'Die Hausnummer darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Die Hausnummer enthält ungültige Sonderzeichen!',\n    ),\n  zip: Yup.string()\n    .required('Die Postleitzahl muss angegeben werden!')\n    .length(5, 'Die Postleitzahl muss 5 Zeichen lang sein!')\n    .matches(\n      /^([0]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{3}$/,\n      'Die Postleitzahl ist ungültig!',\n    ),\n  city: Yup.string()\n    .required('Der Ort muss angegeben werden!')\n    .trim()\n    .min(2, 'Der Ort muss mindestens 2 Zeichen lang sein!')\n    .max(100, 'Der Ort darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Ort enthält ungültige Sonderzeichen!',\n    ),\n  state: Yup.string()\n    .required('Das Bundesland muss ausgewählt werden!')\n    .oneOf(\n      [\n        'BW',\n        'BY',\n        'BE',\n        'BB',\n        'HB',\n        'HH',\n        'HE',\n        'MV',\n        'NI',\n        'NW',\n        'RP',\n        'SL',\n        'SN',\n        'ST',\n        'SH',\n        'TH',\n      ],\n      'Das Bundesland muss ausgewählt werden!',\n    ),\n  district: Yup.string()\n    .trim()\n    .max(100, 'Der Wahlkreis darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Wahlkreis enthält ungültige Sonderzeichen!',\n    ),\n  phone: Yup.string()\n    .required('Telefon muss angegeben werden!')\n    .min(3, 'Die Telefonnummer muss angegeben werden!')\n    .max(100, 'Die Telefonnummer darf maximal 100 Zeichen lang sein!')\n    .test(\n      'phonenumber-check',\n      'Das Format der Telefonnummer ist ungültig!',\n      (value) => {\n        try {\n          return parsePhoneNumberFromString(value, 'DE').isValid();\n        } catch (error) {\n          return false;\n        }\n      },\n    ),\n  startDate: Yup.date()\n    .nullable()\n    .required('Das Eintrittsdatum muss angegeben werden!')\n    .min(\n      new Date(\n        today.getFullYear(),\n        today.getMonth(),\n        today.getDate(),\n        0,\n        0,\n        0,\n        0,\n      ),\n      'Das Eintrittsdatum darf nicht in der Vergangenheit liegen!',\n    )\n    .max(\n      new Date(\n        today.getFullYear() + 1,\n        today.getMonth(),\n        today.getDate(),\n        0,\n        0,\n        0,\n        0,\n      ),\n      'Das Eintrittsdatum darf maximal 1 Jahr in der Zukunft liegen!',\n    ),\n  socialNetworks: Yup.string()\n    .max(\n      5000,\n      'Für das Feld \"Soziale Netzwerke\" stehen maximal 5000 Zeichen zur Verfügung!',\n    )\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?!;:@€=&()\\[\\]\\s_%§*#]+$/u,\n      'Soziale Netzwerke enthält ungültige Sonderzeichen!',\n    ),\n  parties: Yup.string()\n    .max(\n      5000,\n      'Für das Feld \"Frühere Parteimitgliedschaften\" stehen maximal 5000 Zeichen zur Verfügung!',\n    )\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?!;:@€=&()\\[\\]\\s_%§*#]+$/u,\n      'Frühere Parteimitgliedschaften enthält ungültige Sonderzeichen!',\n    ),\n  committees: Yup.string()\n    .max(\n      5000,\n      'Für das Feld \"Fachausschüsse\" stehen maximal 5000 Zeichen zur Verfügung!',\n    )\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?!;:@€=&()\\[\\]\\s_%§*#]+$/u,\n      'Fachausschüsse enthält ungültige Sonderzeichen!',\n    ),\n  amount: Yup.number('Der Mitgliedsbeitrag muss eine Zahl sein!')\n    .required('Der Mitgliedsbeitrag muss angegeben werden!')\n    .integer('Der Betrag vor dem Komma muss eine ganze Zahl sein!')\n    .positive('Der Mitgliedsbeitrag muss positiv sein!')\n    .min(1, 'Der Betrag vor dem Komma muss mindestens 1 sein!')\n    .max(\n      1000,\n      'Die automatische Anmeldung unterstützt nur Mitgliedsbeiträge bis 1000€. Höhere Beträge erfordern eine Rücksprache mit dem Vorstand!',\n    ),\n  amountCents: Yup.string()\n    .required('Der Mitgliedsbeitrag muss angegeben werden!')\n    .length(2, 'Bitte genau zwei Stellen angeben!')\n    .matches(\n      /^[0-9]+$/,\n      'Der Betrag hinter dem Komma muss eine ganze Zahl sein!',\n    ),\n  paymentCycle: Yup.number('Das Zahlungsintervall muss eine Zahl sein!')\n    .required('Das Zahlungsintervall muss angegeben werden!')\n    .integer('Das Zahlungsintervall muss eine ganze Zahl sein!')\n    .positive('Das Zahlungsintervall muss positiv sein!')\n    .oneOf(\n      [6, 12],\n      'Das Zahlungsintervall muss halbjährlich oder jährlich sein!',\n    ),\n  holder: Yup.string()\n    .required('Der Kontoinhaber muss angegeben werden!')\n    .trim()\n    .min(1, 'Der Kontoinhaber muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Der Kontoinhaber darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?()]+$/u,\n      'Der Konoinhaber enthält ungültige Sonderzeichen!',\n    ),\n  bank: Yup.string()\n    .required('Das Geldinstitut muss angegeben werden!')\n    .trim()\n    .min(1, 'Das Geldinstitut muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Das Geldinstitut darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?()]+$/u,\n      'Das Geldinstitut enthält ungültige Sonderzeichen!',\n    ),\n  iban: Yup.string()\n    .required('Die IBAN muss angegeben werden!')\n    .matches(\n      /^(?:(?:IT|SM)\\d{2}[A-Z]\\d{22}|CY\\d{2}[A-Z]\\d{23}|NL\\d{2}[A-Z]{4}\\d{10}|LV\\d{2}[A-Z]{4}\\d{13}|(?:BG|BH|GB|IE)\\d{2}[A-Z]{4}\\d{14}|GI\\d{2}[A-Z]{4}\\d{15}|RO\\d{2}[A-Z]{4}\\d{16}|KW\\d{2}[A-Z]{4}\\d{22}|MT\\d{2}[A-Z]{4}\\d{23}|NO\\d{13}|(?:DK|FI|GL|FO)\\d{16}|MK\\d{17}|(?:AT|EE|KZ|LU|XK)\\d{18}|(?:BA|HR|LI|CH|CR)\\d{19}|(?:GE|DE|LT|ME|RS)\\d{20}|IL\\d{21}|(?:AD|CZ|ES|MD|SA)\\d{22}|PT\\d{23}|(?:BE|IS)\\d{24}|(?:FR|MR|MC)\\d{25}|(?:AL|DO|LB|PL)\\d{26}|(?:AZ|HU)\\d{27}|(?:GR|MU)\\d{28})$/i,\n      'Die IBAN ist ungültig! Bitte ohne Leerzeichen eingeben.',\n    )\n    .test(\n      'iban-check',\n      'Die IBAN ist ungültig! Bitte ohne Leerzeichen eingeben.',\n      (value) => {\n        return IBAN.isValid(value);\n      },\n    ),\n  bic: Yup.string()\n    .required('Die BIC muss angegeben werden!')\n    .matches(/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/, 'Die BIC ist ungültig!'),\n  acceptMandate: Yup.boolean()\n    .transform((value, originalvalue) => {\n      return value[0] == 'on';\n    })\n    .required('Die Einzugsermächtigung muss akzeptiert werden!')\n    .oneOf([true], 'Die Einzugsermächtigung muss akzeptiert werden!'),\n  acceptPrices: Yup.boolean()\n    .transform((value, originalvalue) => {\n      return value[0] == 'on';\n    })\n    .required('Die Beitragstabelle muss akzeptiert werden!')\n    .oneOf([true], 'Die Beitragstabelle muss akzeptiert werden!'),\n  acceptPrivacy: Yup.boolean()\n    .transform((value, originalvalue) => {\n      return value[0] == 'on';\n    })\n    .required('Die Datenschutzerklärung muss akzeptiert werden!')\n    .oneOf([true], 'Die Datenschutzerklärung muss akzeptiert werden!'),\n  acceptNewsletter: Yup.boolean().transform((value, originalvalue) => {\n    return value[0] == 'on';\n  }),\n});\n\nfunction submitApplication(application) {\n  const appl = Object.assign({}, application);\n  appl.phone = parsePhoneNumberFromString(application.phone, 'DE').number;\n  appl.acceptMandate =\n    Object.hasOwn(application, 'acceptMandate') &&\n    application.acceptMandate[0] == 'on';\n  appl.acceptPrices =\n    Object.hasOwn(application, 'acceptPrices') &&\n    application.acceptPrices[0] == 'on';\n  appl.acceptPrivacy =\n    Object.hasOwn(application, 'acceptPrivacy') &&\n    application.acceptPrivacy[0] == 'on';\n  appl.acceptNewsletter =\n    Object.hasOwn(application, 'acceptNewsletter') &&\n    application.acceptNewsletter[0] == 'on';\n  appl.amount = parseInt(application.amount);\n  appl.amountCents = parseInt(application.amountCents);\n  appl.paymentCycle = parseInt(application.paymentCycle);\n\n  const response = Applications.create(appl).then(\n    function onResult(res) {\n      alert(\n        'Der Antrag mit der ID ' +\n          res.body.HashId +\n          ' wurde erfolgreich übermittelt :-)',\n      );\n      window.widget.setState({\n        hashId: res.body.HashId,\n        firstName: appl.firstName,\n        email: appl.email,\n        acceptNewsletter: appl.acceptNewsletter,\n      });\n    },\n    function onError(err) {\n      var error =\n        'Es existiert bereits ein Mitgliedsantrag zu den angegebenen Daten oder die Daten wurden aus anderen Gründen vom Server abgelehnt. Die angegebene E-Mail-Adresse muss eindeutig sein. Wenn mehrere Anträge für verschiedene Personen gestellt werden, muss für jede Person eine eigene E-Mail-Adresse angegeben werden. Bei Problemen bitte an den Support wenden!';\n      alert(error);\n      window.widget.setState({error: error});\n    },\n  );\n}\n\nfunction ApplicationForm() {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={submitApplication}\n      initialValues={{\n        startDate: today.toISOString(),\n      }}>\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors,\n        setFieldValue,\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          <h3>Meine Daten:</h3>\n          <Form.Row>\n            <Form.Group as={Col} md=\"1\" controlId=\"validationGender\">\n              <Form.Label>Anrede</Form.Label>\n              <Form.Control\n                type=\"select\"\n                as=\"select\"\n                name=\"gender\"\n                value={values.gender}\n                onChange={handleChange}\n                isValid={touched.gender && !errors.gender}\n                isInvalid={!!errors.gender}>\n                <option value=\"none\">Bitte auswählen</option>\n                <option value=\"Frau\">Frau</option>\n                <option value=\"Herr\">Herr</option>\n                <option value=\"divers\">divers</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.gender}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"1\" controlId=\"validationTitle\">\n              <Form.Label>Titel</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"title\"\n                value={values.title}\n                onChange={handleChange}\n                isValid={touched.title && !errors.title}\n                isInvalid={!!errors.title}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"5\" controlId=\"validationFirstName\">\n              <Form.Label>Vorname</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"firstName\"\n                value={values.firstName}\n                onChange={handleChange}\n                isValid={touched.firstName && !errors.firstName}\n                isInvalid={!!errors.firstName}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.firstName}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"5\" controlId=\"validationLastName\">\n              <Form.Label>Nachname</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"lastName\"\n                value={values.lastName}\n                onChange={handleChange}\n                isValid={touched.lastName && !errors.lastName}\n                isInvalid={!!errors.lastName}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.lastName}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"3\" controlId=\"validationBirthDate\">\n              <Form.Label>Geburtsdatum</Form.Label>\n              <DatePicker\n                id=\"birthDate\"\n                name=\"birthDate\"\n                value={values.birthDate}\n                onChange={(e) => {\n                  setFieldValue('birthDate', e);\n                }}\n                isValid={touched.birthDate && !errors.birthDate}\n                isInvalid={!!errors.birthDate}\n                feedback={errors.birthDate}\n                todayButtonLabel=\"Heute\"\n                weekStartsOn={1}\n                showTodayButton={false}\n                dateFormat=\"DD.MM.YYYY\"\n                dayLabels={['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa']}\n                monthLabels={[\n                  'Januar',\n                  'Februar',\n                  'März',\n                  'April',\n                  'Mai',\n                  'Juni',\n                  'Juli',\n                  'August',\n                  'September',\n                  'Oktober',\n                  'November',\n                  'Dezember',\n                ]}\n              />\n            </Form.Group>\n            <Form.Group as={Col} md=\"5\" controlId=\"validationEmail\">\n              <Form.Label>E-Mail-Adresse</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                isValid={touched.email && !errors.email}\n                isInvalid={!!errors.email}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationPhone\">\n              <Form.Label>Telefon</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"phone\"\n                value={values.phone}\n                onChange={handleChange}\n                isValid={touched.phone && !errors.phone}\n                isInvalid={!!errors.phone}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.phone}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationStreet\">\n              <Form.Label>Straße</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Straße\"\n                name=\"street\"\n                value={values.street}\n                onChange={handleChange}\n                isValid={touched.street && !errors.street}\n                isInvalid={!!errors.street}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.street}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"2\" controlId=\"validationStreetNumber\">\n              <Form.Label>Hausnummer</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Hausnummer\"\n                name=\"streetNumber\"\n                value={values.streetNumber}\n                onChange={handleChange}\n                isValid={touched.streetNumber && !errors.streetNumber}\n                isInvalid={!!errors.streetNumber}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.streetNumber}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"2\" controlId=\"validationZip\">\n              <Form.Label>Postleitzahl</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Postleitzahl\"\n                name=\"zip\"\n                value={values.zip}\n                onChange={handleChange}\n                isValid={touched.zip && !errors.zip}\n                isInvalid={!!errors.zip}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.zip}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationCity\">\n              <Form.Label>Ort</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Ort\"\n                name=\"city\"\n                value={values.city}\n                onChange={handleChange}\n                isValid={touched.city && !errors.city}\n                isInvalid={!!errors.city}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationState\">\n              <Form.Label>Bundesland</Form.Label>\n              <Form.Control\n                type=\"select\"\n                as=\"select\"\n                placeholder=\"Bundesland\"\n                name=\"state\"\n                value={values.state}\n                onChange={handleChange}\n                isValid={touched.state && !errors.state}\n                isInvalid={!!errors.state}>\n                <option value=\"none\">Bitte auswählen</option>\n                <option value=\"BW\">Baden-Württemberg</option>\n                <option value=\"BY\">Bayern</option>\n                <option value=\"BE\">Berlin</option>\n                <option value=\"BB\">Brandenburg</option>\n                <option value=\"HB\">Bremen</option>\n                <option value=\"HH\">Hamburg</option>\n                <option value=\"HE\">Hessen</option>\n                <option value=\"MV\">Mecklenburg-Vorpommern</option>\n                <option value=\"NI\">Niedersachsen</option>\n                <option value=\"NW\">Nordrhein-Westfalen</option>\n                <option value=\"RP\">Rheinland-Pfalz</option>\n                <option value=\"SL\">Saarland</option>\n                <option value=\"SN\">Sachsen</option>\n                <option value=\"ST\">Sachsen-Anhalt</option>\n                <option value=\"SH\">Schleswig-Holstein</option>\n                <option value=\"TH\">Thüringen</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"4\" controlId=\"validationDistrict\">\n              <Form.Label>Wahlkreis</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Wahlkreis\"\n                name=\"district\"\n                value={values.district}\n                onChange={handleChange}\n                isValid={touched.district && !errors.district}\n                isInvalid={!!errors.district}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.district}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\" controlId=\"validationStart\">\n              <Form.Label>Eintritt zum</Form.Label>\n              <DatePicker\n                id=\"startDate\"\n                name=\"startDate\"\n                value={values.startDate}\n                onChange={(e) => {\n                  setFieldValue('startDate', e);\n                }}\n                isValid={touched.startDate && !errors.startDate}\n                isInvalid={!!errors.startDate}\n                feedback={errors.startDate}\n                todayButtonLabel=\"Heute\"\n                weekStartsOn={1}\n                showTodayButton={true}\n                dateFormat=\"DD.MM.YYYY\"\n                dayLabels={['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa']}\n                monthLabels={[\n                  'Januar',\n                  'Februar',\n                  'März',\n                  'April',\n                  'Mai',\n                  'Juni',\n                  'Juli',\n                  'August',\n                  'September',\n                  'Oktober',\n                  'November',\n                  'Dezember',\n                ]}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationSocialNetworks\">\n              <Form.Label>Soziale Netzwerke</Form.Label>\n              <Form.Control\n                type=\"text\"\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"socialNetworks\"\n                value={values.socialNetworks}\n                onChange={handleChange}\n                isValid={touched.socialNetworks && !errors.socialNetworks}\n                isInvalid={!!errors.socialNetworks}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.socialNetworks}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationParties\">\n              <Form.Label>\n                Frühere Parteimitgliedschaften im Sinne des Parteiengesetzes\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"parties\"\n                value={values.parties}\n                onChange={handleChange}\n                isValid={touched.parties && !errors.parties}\n                isInvalid={!!errors.parties}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.parties}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCommittees\">\n              <Form.Label>\n                Ich würde gerne in folgenden Fachausschüssen mitarbeiten\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"committees\"\n                value={values.committees}\n                onChange={handleChange}\n                isValid={touched.committees && !errors.committees}\n                isInvalid={!!errors.committees}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.committees}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormikUsername\">\n              <Form.Label>monatlicher Mitgliedsbeitrag</Form.Label>\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"7\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"amount\"\n                  value={values.amount}\n                  onChange={handleChange}\n                  isInvalid={!!errors.amount}\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">,</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"50\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  name=\"amountCents\"\n                  value={values.amountCents}\n                  onChange={handleChange}\n                  isValid={touched.amountCents && !errors.amountCents}\n                  isInvalid={!!errors.amountCents}\n                />\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"inputGroupPrepend\">€</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.amount || '' + ' ' + errors.amountCents || ''}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n\n            <Form.Group as={Col} md=\"6\" controlId=\"validationPaymentCycle\">\n              <Form.Label>Zahlungsintervall</Form.Label>\n              <Form.Control\n                type=\"select\"\n                as=\"select\"\n                name=\"paymentCycle\"\n                value={values.paymentCycle}\n                onChange={handleChange}\n                isValid={touched.paymentCycle && !errors.paymentCycle}\n                isInvalid={!!errors.paymentCycle}>\n                <option value=\"0\">Bitte auswählen</option>\n                <option value=\"12\">jährlich</option>\n                <option value=\"6\">halbjährlich (+1€ pro Monat)</option>\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.paymentCycle}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <h3>Einzugsermächtigung:</h3>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationHolder\">\n              <Form.Label>Kontoinhaber</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"holder\"\n                value={values.holder}\n                onChange={handleChange}\n                isValid={touched.holder && !errors.holder}\n                isInvalid={!!errors.holder}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.holder}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationIBAN\">\n              <Form.Label>IBAN</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"iban\"\n                value={values.iban}\n                onChange={handleChange}\n                isValid={touched.iban && !errors.iban}\n                isInvalid={!!errors.iban}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.iban}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationBank\">\n              <Form.Label>Geldinstitut</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bank\"\n                value={values.bank}\n                onChange={handleChange}\n                isValid={touched.bank && !errors.bank}\n                isInvalid={!!errors.bank}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.bank}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationBIC\">\n              <Form.Label>BIC</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"bic\"\n                value={values.bic}\n                onChange={handleChange}\n                isValid={touched.bic && !errors.bic}\n                isInvalid={!!errors.bic}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.bic}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationAcceptMandate\">\n              Mit dieser Einzugsermächtigung ist die Partei DIE FÖDERALEN bis\n              auf Widerruf berechtigt, meine Beiträge von dem oben angegebenen\n              Konto abzubuchen.\n              <Form.Check\n                required\n                name=\"acceptMandate\"\n                label=\"Hiermit ermächtige ich DIE FÖDERALEN bis auf Widerruf, die von mir zu entrichtenden Mitgliedsbeiträge zu dem jeweiligen Fälligkeitsdatum zu Lasten des oben angegebenen Kontos per Lastschrift einzuziehen.\"\n                onChange={handleChange}\n                isValid={touched.acceptMandate && !errors.acceptMandate}\n                isInvalid={!!errors.acceptMandate}\n                feedback={errors.acceptMandate}\n                id=\"validationAcceptMandate0\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationAcceptPrices\">\n              <h3>Beitragstabelle:</h3>\n              Grundlage für den Mitgliedsbeitag sind die regelmäßig\n              wiederkehrenden Einkünfte und Bezüge abzüglich Sozialabgaben und\n              Steuern. Gesetzliche Unterhaltsverpflichtungen mindern die\n              Einkünfte und Bezüge um den jeweiligen Unterhaltsbetrag. Mehr dazu\n              steht in der{' '}\n              <a\n                href=\"/dokumente/Beitragstabelle-2020-06-27.pdf\"\n                target=\"_blank\">\n                Beitragstabelle\n              </a>\n              .\n              <Form.Check\n                required\n                name=\"acceptPrices\"\n                label=\"Ich habe die Beitragstabelle der Partei DIE FÖDERALEN zur Kenntniss genommen.\"\n                onChange={handleChange}\n                isValid={touched.acceptPrices && !errors.acceptPrices}\n                isInvalid={!!errors.acceptPrices}\n                feedback={errors.acceptPrices}\n                id=\"validationAcceptPrices0\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationAcceptPrivacy\">\n              <h3>Datenschutzbestimmung:</h3>\n              Ich willige ein, dass DIE FÖDERALEN als verantwortliche Stelle,\n              die in der Beitrittserklärung erhobenen personenbezogenen Daten\n              ausschließlich zum Zwecke der Mitgliederverwaltung, des\n              Beitragseinzuges und der Übermittlung von Parteiinformationen\n              durch die Partei verarbeitet und genutzt werden. Eine Übermittlung\n              von Daten an Partnerorganisationen wie z.B. den Landesverbänden\n              findet im Rahmen des Veranstaltungsmanagements im beschränkten\n              Maße statt. Diese Datenübermittlungen sind notwendig zum Zwecke\n              der Organisation. Eine Datennutzung für Werbezwecke findet nicht\n              statt. Die Verarbeitung erfolgt auf Basis des BDSG Neu und der\n              DSGVO. Ohne eine Zustimmung zu den Datenschutzbestimmungen kann\n              der Mitgliedsantrag nicht genehmigt werden. Weitere Informationen\n              zum Thema Datenschutz finden Sie im Internet unter\n              www.foederalen.de/datenschutz Einverständniserklärung zur\n              Veröffentlichung von Fotos und Filmaufnahmen: Ich willige ein,\n              dass im Rahmen von Veranstaltungen angefertigte Foto- und\n              Filmaufnahmen für Veröffentlichungen, Berichte, in Printmedien,\n              eventuellen Sozialen Netzwerken und auf der Internetseite der\n              Partei unentgeltlich verwendet werden dürfen. Jegliche andere\n              Verwendung ist unzulässig. Diese Einwilligung kann jederzeit\n              schriftlich für die Zukunft widerrufen werden.\n              <br />\n              <a href=\"/datenschutz\" target=\"_blank\">\n                Datenschutzbestimmung öffnen\n              </a>\n              <Form.Check\n                required\n                name=\"acceptPrivacy\"\n                label=\"Ich stimme der Datenschutzbestimmung zu.\"\n                onChange={handleChange}\n                isValid={touched.acceptPrivacy && !errors.acceptPrivacy}\n                isInvalid={!!errors.acceptPrivacy}\n                feedback={errors.acceptPrivacy}\n                id=\"validationAcceptPrivacy0\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationAcceptNewsletter\">\n              <Form.Check\n                required\n                name=\"acceptNewsletter\"\n                label=\"Ja, ich möchte in den DIE FÖDERALEN Newsletter-Verteiler eingetragen werden.\"\n                onChange={handleChange}\n                isValid={touched.acceptNewsletter && !errors.acceptNewsletter}\n                isInvalid={!!errors.acceptNewsletter}\n                feedback={errors.acceptNewsletter}\n                id=\"validationAcceptNewsletter0\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Button type=\"submit\">\n            Mitgliedschaft zahlungspflichtig beantragen\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nclass ApplicationWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hashId: '',\n      firstName: '',\n      email: '',\n      acceptNewsletter: false,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    window.widget = this;\n  }\n\n  render() {\n    if (this.state.hashId == '') {\n      return (\n        <div>\n          <Title\n            title=\"Mitmachen - Die Föderalen\"\n            url={createUrl('/mitmachen')}\n          />\n          <TitleRow>\n            <Col>\n              <h1>Antrag auf Mitgliedschaft in der Partei DIE FÖDERALEN</h1>\n            </Col>\n          </TitleRow>\n          <ContentRow>\n            <Col>\n              <Text>\n                Hiermit beantrage ich, meinen Eintritt in die Partei DIE\n                FÖDERALEN. Ich bekenne mich zu den programmatischen Grundsätzen\n                der Partei DIE FÖDERALEN und erkenne die Bundessatzung der\n                Partei DIE FÖDERALEN an. Die Beitragstabelle, Bundessatzung,\n                Bundesfinanzordnung, Wahlordnung, Schiedgerichtsordnung und das\n                Grundsatzprogramm befindet sich <a href=\"/satzung\">hier</a>.\n              </Text>\n            </Col>\n          </ContentRow>\n          {this.state.error && (\n            <ContentRow>\n              <Col>\n                <Alert variant=\"danger\">{this.state.error}</Alert>\n              </Col>\n            </ContentRow>\n          )}\n          <ApplicationForm />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Title\n            title=\"Dein Mitgliedsantrag wurde erfolgreich übermittelt - Die Föderalen\"\n            url={createUrl('/mitmachen')}\n          />\n          <TitleRow>\n            <Col>\n              <h1>Dein Mitgliedsantrag wurde erfolgreich übermittelt</h1>\n            </Col>\n          </TitleRow>\n          <ContentRow>\n            <Col>\n              <Text>\n                Vielen Dank, {this.state.firstName}! Dein Mitgliedsantrag wurde\n                erfolgreich übermittelt. Dein Antrag wird unter folgender ID\n                bearbeitet:\n                <p>\n                  <b>{this.state.hashId}</b>\n                </p>\n                <p>\n                  An die angebene E-Mail-Adresse <b>{this.state.email}</b> wurde\n                  zur Bestätigung eine E-Mail geschickt. Bitte verifiziere deine\n                  E-Mail-Adresse, damit wir deinen Antrag schneller bearbeiten\n                  können.\n                </p>\n                {this.state.acceptNewsletter && (\n                  <p>\n                    Um das kostenlose Newsletter zu bestätigen, erhälst du eine\n                    separate E-Mail.\n                  </p>\n                )}\n                <p>\n                  Zur Sicherheit{' '}\n                  <a href=\"javascript:if(window.print)window.print()\">drucke</a>{' '}\n                  nun diese Seite aus oder speichere dir die Antrags-ID. Bei\n                  Probleme kannst du dich mit der Antrags-ID und deiner\n                  E-Mail-Adresse an unseren Support wenden.\n                </p>\n              </Text>\n            </Col>\n          </ContentRow>\n        </div>\n      );\n    }\n  }\n}\n\nclass Mitmachen extends Component<Props> {\n  render() {\n    return (\n      <DefaultLayout navigation={navigation}>\n        <ApplicationWidget />\n      </DefaultLayout>\n    );\n  }\n}\n\nexport default Mitmachen;\n"],"names":["TitleRow","_styled","Row","target","name","styles","ContentRow","Text","today","Date","schema","Yup","gender","required","oneOf","title","trim","max","matches","firstName","min","lastName","email","birthDate","nullable","getFullYear","getMonth","getDate","street","streetNumber","zip","length","city","state","district","phone","test","value","parsePhoneNumberFromString","isValid","error","startDate","socialNetworks","parties","committees","amount","integer","positive","amountCents","paymentCycle","holder","bank","iban","IBAN","bic","acceptMandate","transform","originalvalue","acceptPrices","acceptPrivacy","acceptNewsletter","submitApplication","application","appl","Object","assign","number","hasOwn","parseInt","Applications","create","then","res","alert","body","HashId","window","widget","setState","hashId","err","ApplicationForm","___EmotionJSX","Formik","validationSchema","onSubmit","initialValues","toISOString","_ref","handleSubmit","handleChange","handleBlur","values","touched","errors","setFieldValue","Form","noValidate","Group","as","Col","md","controlId","Label","Control","type","onChange","isInvalid","Feedback","DatePicker","id","e","feedback","todayButtonLabel","weekStartsOn","showTodayButton","dateFormat","dayLabels","monthLabels","placeholder","rows","InputGroup","Prepend","Check","label","href","Button","ApplicationWidget","Component","constructor","props","super","this","componentDidMount","render","Title","url","createUrl","Alert","variant","Mitmachen","DefaultLayout","navigation"],"sourceRoot":""}