{"version":3,"file":"component---src-templates-articles-js-content-file-path-content-themen-brackies-ecke-2021-04-01-ketten-effekte-wie-man-alles-zu-tode-optimiert-md-5d6aa7916920c47b710e.js","mappings":"iNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,aAAa,cAACC,GAAiBN,EAE9D,OADKM,GAQP,SAA8BC,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAVsBG,CAAqB,iBAAiB,GACnDC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,2TAA4T,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,8aAA+a,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,6YAA8Y,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,0LAA2L,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,wRAAyR,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,iUAAkU,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,ujBAAwjB,KAAMQ,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,mGAAoG,KAAMQ,EAAAA,cAAoB,IAAK,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,+DAAgEQ,EAAAA,cAAoBL,EAAe,KAAM,2CAA4C,KAAMK,EAAAA,cAAoBL,EAAe,KAAM,uDAAwD,KAAMK,EAAAA,cAAoBL,EAAe,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBL,EAAe,KAAM,mCAAoC,KAAMK,EAAAA,cAAoBL,EAAe,KAAM,qCAAsC,KAAMK,EAAAA,cAAoBL,EAAe,KAAM,8BAA+B,KAAMK,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoB,MAAO,qBAAsBA,EAAAA,cAAoB,MAAO,uBAAwBA,EAAAA,cAAoB,MAAO,iBACrxH,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOQ,EAAYF,EAAAA,cAAoBE,EAAWd,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,4HCGA,MAAMe,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,EAAG,CAAAC,OAAA,cAAVF,CAAW,CAAAG,KAAA,SAAAC,OAAA,+CAKvBC,GAAcL,EAAAA,EAAAA,GAAOC,EAAAA,EAAG,CAAAC,OAAA,cAAVF,CAAW,CAAAG,KAAA,SAAAC,OAAA,gCAIzBE,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,EAAKC,MAAK,CAAAN,OAAA,cAAjBF,CAAkB,CAAAG,KAAA,SAAAC,OAAA,gCAO/BK,GAAcT,EAAAA,EAAAA,GAAOO,EAAAA,EAAI,CAAAL,OAAA,aAAXF,CAAY,CAAAG,KAAA,UAAAC,OAAA,mFAO1BM,GAAYV,EAAAA,EAAAA,GAAA,MAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,mEAUZO,GAAQX,EAAAA,EAAAA,GAAA,MAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,6CAKRQ,GAAMZ,EAAAA,EAAAA,GAAA,MAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,wDAKNS,GAAUb,EAAAA,EAAAA,GAAA,QAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,oBAGVU,GAAQd,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,sDAIRb,GAAaS,EAAAA,EAAAA,GAAA,OAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,qBAGbW,GAASf,EAAAA,EAAAA,GAAA,QAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,6BAGTY,GAAShB,EAAAA,EAAAA,GAAA,QAAAE,OAAA,aAAAF,CAAA,CAAAG,KAAA,SAAAC,OAAA,gCAeTa,EAAa,CACjBC,MAAK,IACLX,KAAI,IACJY,SAAQ,IACRV,aACAH,YACAc,UAAS,IACTP,aACAD,SACAE,WACAvB,gBACAwB,YACAC,aAEIK,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EAChC,OAAO1B,EAAAA,cAAoB6B,EAAAA,EAAe,CACxCC,WAAYA,GACX9B,EAAAA,cAAoBY,EAAAA,EAAO,CAC5BmB,MAAOJ,EAAKK,IAAIC,YAAYF,MAAQ,MAAQJ,EAAKK,IAAIC,YAAYC,QAAU,4BAC3EC,YAAaR,EAAKK,IAAIC,YAAYG,SAClCC,OAAOC,EAAAA,EAAAA,GAAUX,EAAKK,IAAIC,YAAYI,OACtCE,KAAKD,EAAAA,EAAAA,GAAU,IAAMX,EAAKK,IAAIQ,OAAOC,MACrCC,YAAaf,EAAKK,IAAIC,YAAYS,cAChC1C,EAAAA,cAAoBG,EAAU,KAAMH,EAAAA,cAAoB2C,EAAAA,EAAK,KAAM3C,EAAAA,cAAoB4C,EAAAA,GAAM,CAC/FC,GAAI,WACH,UAAW,IAAK,KAAOlB,EAAKK,IAAIC,YAAYC,QAASlC,EAAAA,cAAoBc,EAAc,KAAMd,EAAAA,cAAoB4C,EAAAA,GAAM,CACxHC,GAAI,IAAMlB,EAAKK,IAAIQ,OAAOC,MACzBd,EAAKK,IAAIC,YAAYF,QAAS/B,EAAAA,cAAoBe,EAAU,KAAMY,EAAKK,IAAIC,YAAYG,UAAWpC,EAAAA,cAAoBgB,EAAQ,KAAMW,EAAKK,IAAIC,YAAYa,eAAgB,IAAK,IAvChKC,KACjB,MAAMC,EAAO,IAAIC,KAAM,QAASC,KAAKH,GAAeI,SAASJ,GAAeA,GAM5E,OAAOC,EAAKI,mBAAmB,QALf,CACdC,KAAM,UACNC,MAAO,OACPC,IAAK,YAE4C,IAAMP,EAAKQ,mBAAmB,QAAS,CACxFC,KAAM,UACNC,OAAQ,YACL,MAAM,EA6B2KC,CAAWhC,EAAKK,IAAIC,YAAYe,SAAUhD,EAAAA,cAAoBS,EAAY,KAAMT,EAAAA,cAAoB2C,EAAAA,EAAK,KAAM3C,EAAAA,cAAoBa,EAAY,KAAMb,EAAAA,cAAoBW,EAAAA,EAAKiD,KAAM,KAAM5D,EAAAA,cAAoBU,EAAW,KAAMiB,EAAKK,IAAIC,YAAY4B,cAAe7D,EAAAA,cAAoBW,EAAAA,EAAKmD,IAAK,CACrdC,QAAS,MACTC,GAAI1C,EAAAA,EACJ2C,IAAKtC,EAAKK,IAAIC,YAAYI,QACxBrC,EAAAA,cAAoBW,EAAAA,EAAKuD,OAAQ,KAAMlE,EAAAA,cAAoBU,EAAW,KAAMiB,EAAKK,IAAIC,YAAYkC,gBAAiBnE,EAAAA,cAAoBiB,EAAY,KAAM,WAAYU,EAAKK,IAAIC,YAAYmC,gBAAiBpE,EAAAA,cAAoB,MAAO,CACvOqE,UAAW,WACVrE,EAAAA,cAAoBsE,EAAAA,GAAa,CAClC5E,WAAY2B,GACXO,MAAa,EA8BH,SAAS2C,EAAiBnF,GACvC,OAAOY,EAAAA,cAAoByB,EAAUrC,EAAOY,EAAAA,cAAoBwE,EAAqBpF,GACvF,C,gGCzHO,MAAMqF,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBhF,GAC/B,MAAMiF,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAf/E,EACFA,EAAWiF,GAGb,IAAIA,KAAsBjF,IAChC,CAACiF,EAAmBjF,GACzB,CAGA,MAAMkF,EAAc,CAAC,EAQd,SAASN,GAAY,WAAC5E,EAAU,SAAEkC,EAAQ,qBAAEiD,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfnF,EACHA,EAAW,CAAC,GACZA,GAAckF,EAEJF,EAAiBhF,GAG5B,gBACL+E,EAAWM,SACX,CAACC,MAAOF,GACRlD,EAEJ,C","sources":["webpack://foederalen-website/./content/themen/brackies-ecke/2021-04-01-ketten-effekte-wie-man-alles-zu-tode-optimiert.md","webpack://foederalen-website/./src/templates/articles.js","webpack://foederalen-website/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components), {TextIndentBox} = _components;\n  if (!TextIndentBox) _missingMdxReference(\"TextIndentBox\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Da sind wir doch noch knapp an einer Katastrophe vorbeigekommen, mögen sich\\nviele denken. Warten sie doch sehnsüchtig auf ihren Nachschub an Finelinern\\noder Vitaminpräparaten. Der befindet sich aktuell irgendwo im Roten Meer oder\\nim Golf von Aden und wartet auf seine Weiterfahrt durch den Suez-Kanal zu uns.\"), \"\\n\", React.createElement(_components.p, null, \"Wir leben in einem Zeitalter der Optimierung. Alles muss optimal sein. Vom\\noptimalen Garzeitpunkt, der optimalen Belichtung bis zum optimalen Lagerbestand\\ngibt es nichts, was wir bis an den Rand des Möglichen zu verbessern wissen.\\nBereits Mitte der 1980er Jahre wurde die Lagerhaltung optimiert. Es war schick\\nund günstig, die Lager so zu verkleinern, dass eine sogenannte Just-in-time\\n(JIT)-Lieferung erstrebenswert ist.\"), \"\\n\", React.createElement(_components.p, null, \"Das bedeutet zum Beispiel bei der Automobilindustrie, dass die erforderlichen\\nBauteile von den Zulieferern direkt ans Band geliefert werden. Ein\\nZwischenlager kann dann relativ klein ausfallen, im besten Falle wird sogar\\ndarauf verzichtet. Dieses Beispiel ist deshalb so wichtig, weil es im Jahr 1998\\ndazu führte, dass die Autofirma Ford auf ca. DM 100.000.000,— Umsatz\\nverzichten musste.\"), \"\\n\", React.createElement(_components.p, null, \"Ein Streik in der Automobilindustrie wurde so geschickt platziert, dass ein\\nkleiner Zuliefererbereich (Autoschlösser) bestreikt wurde und so die Produktion\\nder Fahrzeuge lahmlegte.\"), \"\\n\", React.createElement(_components.p, null, \"Dies zeigt auf, dass bis an den Rand getriebene Optimierungsprozesse ein\\ngewaltiges Potenzial aufweisen. Das Potential, einen großen Schaden zu\\nverursachen. Wenn alles optimiert ist, dann führen kleinste Abweichungen zu\\nproblematischen Situationen. Wie jetzt im Suez-Kanal.\"), \"\\n\", React.createElement(_components.p, null, \"Hier spielt noch eine andere Entwicklung der letzten Dekaden mit. Ein\\nchinesischer Wirtschaftsraum gilt als Werkbank der Welt und damit wird obiges\\nProblem zu einem Problem mit globalem Ausmaß. Nicht nur für die\\nAutomobilindustrie in unserem Land, sondern viele Wirtschaftsbereiche wären\\nweltweit davon betroffen.\"), \"\\n\", React.createElement(_components.p, null, \"Wenn Optimierung und Globalisierung auch noch auf Monopolisierung trifft, kann\\ndas nicht nur die weltweiten Handelsströme stören, sondern eine Krise\\ngewaltigen Ausmaßes auslösen. Hier hilft nur eine Rückbesinnung auf Produktion\\nim eigenen Land, ein Warensystem, das auch kurzfristige Verzerrungen auffangen\\nkann und ein gesunder Menschenverstand. Was haben wir davon, wenn wir T-Shirts\\nfür € 1,— hier kaufen können, wenn dafür irgendwo auf dieser Welt unser\\nMaßstab an Arbeitssicherheit, sozialer Absicherung und viele andere Dinge nicht\\ngewährleistet ist.\"), \"\\n\", React.createElement(_components.p, null, \"Über die Wertschöpfung und die steuerlichen Auswirkungen sollte man dann auch\\nnoch nachdenken.\"), \"\\n\", React.createElement(\"p\", null, React.createElement(_components.p, null, \"Heute zum Abschluss mal ein kurzes, abgewandeltes Gedicht:\\n\", React.createElement(TextIndentBox, null, \"Erst wenn der letzte Prozess optimiert,\"), \"\\n\", React.createElement(TextIndentBox, null, \"wenn die letzte Schraube auf die Sekunde eintrifft,\"), \"\\n\", React.createElement(TextIndentBox, null, \"wenn alles wie am Schnürchen läuft,\"), \"\\n\", React.createElement(TextIndentBox, null, \"wenn alles immer verfügbar ist,\"), \"\\n\", React.createElement(TextIndentBox, null, \"erst dann werden wir feststellen,\"), \"\\n\", React.createElement(TextIndentBox, null, \"wie verletzbar wir sind.\"))), \"\\n\", React.createElement(_components.p, null, React.createElement(\"br\"), \"Stefan Brackmann\\n\", React.createElement(\"br\"), \"Bundesvorsitzender\\n\", React.createElement(\"br\"), \"DIE FÖDERALEN\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/foederalen-frontend/foederalen-frontend/content/themen/brackies-ecke/2021-04-01-ketten-effekte-wie-man-alles-zu-tode-optimiert.md\";\nimport {MDXProvider} from '@mdx-js/react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {graphql, Link} from 'gatsby';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport styled from '@emotion/styled';\nimport DefaultLayout from 'components/layouts/DefaultLayout';\nimport Title from 'components/Title';\nimport createUrl from 'utils/createUrl';\nimport navigation from '../../data/navigation/primary.yml';\nimport Image from 'components/Image';\nimport CTAButton from 'components/buttons/CTAButton';\nconst TitleRow = (styled(Row))`\n  min-width: 300px;\n  max-width: 40vw;\n  margin: auto;\n`;\nconst ContentRow = (styled(Row))`\n  max-width: 60rem;\n  margin: auto;\n`;\nconst CardTitle = (styled(Card.Title))`\n  font-variant: all-small-caps;\n`;\nconst ArticleDeck = (styled(CardDeck))`\n  max-width: 1500px;\n  margin: auto;\n`;\nconst StyledCard = (styled(Card))`\n  margin-top: 1rem;\n  margin: auto;\n  max-width: 60rem;\n  margin-right: 1em;\n  margin-bottom: 1em;\n`;\nconst ArticleTitle = (styled.h1)`\n  font-size: 3.5vmax;\n  & > a {\n    color: #ff5826;\n  }\n\n  & > a:hover {\n    color: #ff5826;\n  }\n`;\nconst Subtitle = (styled.h2)`\n  font-size: 1.5vmax;\n  & > a {\n  font-weight: bold;\n`;\nconst Author = (styled.h3)`\n  font-size: small;\n  font-weight: bold;\n  padding-bottom: 1em;\n`;\nconst FotoAuthor = (styled.span)`\n  font-size: small;\n`;\nconst BrandBox = (styled.div)`\n  border: 4px solid #f15a2e;\n  background-color: #fdc116;\n`;\nconst TextIndentBox = (styled.div)`\n  text-indent: 10px;\n`;\nconst Uppercase = (styled.span)`\n  text-transform: uppercase;\n`;\nconst SmallCaps = (styled.span)`\n  font-variant: all-small-caps;\n`;\nconst formatDate = date_string => {\n  const date = new Date((/^\\d+$/).test(date_string) ? parseInt(date_string) : date_string);\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('de-DE', options) + ' ' + date.toLocaleTimeString('de-DE', {\n    hour: '2-digit',\n    minute: '2-digit'\n  }) + ' Uhr';\n};\nconst shortcodes = {\n  Image,\n  Card,\n  CardDeck,\n  StyledCard,\n  CardTitle,\n  CTAButton,\n  FotoAuthor,\n  Author,\n  BrandBox,\n  TextIndentBox,\n  Uppercase,\n  SmallCaps\n};\nconst Articles = ({data, children}) => {\n  return React.createElement(DefaultLayout, {\n    navigation: navigation\n  }, React.createElement(Title, {\n    title: data.mdx.frontmatter.title + ' - ' + data.mdx.frontmatter.section + ' - Themen - Die Föderalen',\n    description: data.mdx.frontmatter.subtitle,\n    image: createUrl(data.mdx.frontmatter.image),\n    url: createUrl('/' + data.mdx.fields.slug),\n    redirect_to: data.mdx.frontmatter.redirect_to\n  }), React.createElement(TitleRow, null, React.createElement(Col, null, React.createElement(Link, {\n    to: \"/themen\"\n  }, \"Themen\"), \" \", '> ' + data.mdx.frontmatter.section, React.createElement(ArticleTitle, null, React.createElement(Link, {\n    to: '/' + data.mdx.fields.slug\n  }, data.mdx.frontmatter.title)), React.createElement(Subtitle, null, data.mdx.frontmatter.subtitle), React.createElement(Author, null, data.mdx.frontmatter.article_author, \",\", ' ', formatDate(data.mdx.frontmatter.date)))), React.createElement(ContentRow, null, React.createElement(Col, null, React.createElement(StyledCard, null, React.createElement(Card.Body, null, React.createElement(CardTitle, null, data.mdx.frontmatter.image_title)), React.createElement(Card.Img, {\n    variant: \"top\",\n    as: Image,\n    src: data.mdx.frontmatter.image\n  }), React.createElement(Card.Footer, null, React.createElement(CardTitle, null, data.mdx.frontmatter.image_subtitle), React.createElement(FotoAuthor, null, \"© Foto: \", data.mdx.frontmatter.image_author))), React.createElement(\"div\", {\n    className: \"article\"\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children)))));\n};\nArticles.propTypes = {\n  data: PropTypes.object.isRequired,\n  children: PropTypes.object.isRequired\n};\nexport const pageQuery = graphql`\n  query getArticleMarkdown($slug: String!) {\n    mdx(fields: {slug: {eq: $slug}}) {\n      frontmatter {\n        slug\n        title\n        subtitle\n        section\n        date\n        article_author\n        image\n        image_title\n        image_subtitle\n        image_author\n        redirect_to\n      }\n      fields {\n        path\n        slug\n      }\n    }\n  }\n`;\nArticles\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Articles, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","TextIndentBox","id","component","Error","_missingMdxReference","React","wrapper","MDXLayout","TitleRow","_styled","Row","target","name","styles","ContentRow","CardTitle","Card","Title","StyledCard","ArticleTitle","Subtitle","Author","FotoAuthor","BrandBox","Uppercase","SmallCaps","shortcodes","Image","CardDeck","CTAButton","Articles","_ref","data","children","DefaultLayout","navigation","title","mdx","frontmatter","section","description","subtitle","image","createUrl","url","fields","slug","redirect_to","Col","Link","to","article_author","date_string","date","Date","test","parseInt","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","formatDate","Body","image_title","Img","variant","as","src","Footer","image_subtitle","image_author","className","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}