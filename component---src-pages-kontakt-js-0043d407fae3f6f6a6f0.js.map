{"version":3,"file":"component---src-pages-kontakt-js-0043d407fae3f6f6a6f0.js","mappings":"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","sources":["webpack://foederalen-website/./src/pages/kontakt.js"],"sourcesContent":["import React, {Component, useState} from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Carousel from 'react-bootstrap/Carousel';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Card from 'react-bootstrap/Card';\nimport styled from '@emotion/styled';\n\nimport {Location} from '@reach/router';\n\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\n\nimport {parsePhoneNumberFromString} from 'libphonenumber-js';\n\nimport {SupportRequests} from 'agent';\n\nimport DefaultLayout from 'components/layouts/DefaultLayout';\nimport Title from 'components/Title';\nimport createUrl from 'utils/createUrl';\nimport navigation from '../../data/navigation/primary.yml';\n\ntype Props = {};\n\nconst TitleRow = styled(Row)`\n  text-align: center;\n  margin: auto;\n`;\n\nconst ContentRow = styled(Row)`\n  width: 80vw;\n  margin: auto;\n`;\n\nconst Text = styled.p`\n  font-size: x-large;\n`;\n\nconst schema = Yup.object({\n  gender: Yup.string()\n    .required('Die Anrede muss ausgewählt werden!')\n    .oneOf(['Frau', 'Herr', 'divers'], 'Die Anrede muss ausgewählt werden!'),\n  title: Yup.string()\n    .trim()\n    .max(50, 'Der Titel darf maximal 50 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Titel enthält ungültige Sonderzeichen!',\n    ),\n  firstName: Yup.string()\n    .required('Der Vorname muss angegeben werden!')\n    .trim()\n    .min(1, 'Der Vorname muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Der Vorname darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Name enthält ungültige Sonderzeichen!',\n    ),\n  lastName: Yup.string()\n    .required('Der Nachname muss angegeben werden!')\n    .trim()\n    .min(1, 'Der Nachname muss mindestens 1 Zeichen lang sein!')\n    .max(100, 'Der Nachname darf maximal 100 Zeichen lang sein!')\n    .matches(\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-]+$/u,\n      'Der Nachname enthält ungültige Sonderzeichen!',\n    ),\n  email: Yup.string()\n    .required('Die E-Mail-Adresse muss angegeben werden!')\n    .email('Die E-Mail-Adresse ist ungültig!'),\n  phone: Yup.string()\n    .max(100, 'Die Telefonnummer darf maximal 100 Zeichen lang sein!')\n    .test(\n      'phonenumber-check',\n      'Das Format der Telefonnummer ist ungültig!',\n      (value) => {\n        try {\n          return !value || parsePhoneNumberFromString(value, 'DE').isValid();\n        } catch (error) {\n          return false;\n        }\n      },\n    ),\n  institution: Yup.string()\n    .required('Die zuständige Stelle muss ausgewählt werden!')\n    .oneOf(\n      [\n        'BW',\n        'BY',\n        'BE',\n        'BB',\n        'HB',\n        'HH',\n        'HE',\n        'MV',\n        'NI',\n        'NW',\n        'RP',\n        'SL',\n        'SN',\n        'ST',\n        'SH',\n        'TH',\n        'DE',\n      ],\n      'Die zuständige Stelle muss ausgewählt werden!',\n    ),\n  subject: Yup.string()\n    .required('Der Betreff muss angegeben werden!')\n    .max(50, 'Für den Betreff stehen maximal 50 Zeichen zur Verfügung!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?!;:@€=&()\\[\\]\\s_%§*#]+$/u,\n      'Der Betreff enthält ungültige Sonderzeichen!',\n    ),\n  message: Yup.string()\n    .required('Die Nachricht ist erforderlich!')\n    .min(10, 'Die Nachricht muss mindestens 10 Zeichen lang sein!')\n    .max(5000, 'Für die Nachricht stehen maximal 5000 Zeichen zur Verfügung!')\n    .matches(\n      /^[0-9a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ðőŐűŰłŁřďťňŘĎŤŇ ,.'\\-+/?!;:@€=&()\\[\\]\\s_%§*#]+$/u,\n      'Die Nachricht enthält ungültige Sonderzeichen!',\n    ),\n  acceptPrivacy: Yup.boolean()\n    .transform((value, originalvalue) => {\n      return value[0] == 'on';\n    })\n    .required('Die Datenschutzerklärung muss akzeptiert werden!')\n    .oneOf([true], 'Die Datenschutzerklärung muss akzeptiert werden!'),\n  acceptNewsletter: Yup.boolean().transform((value, originalvalue) => {\n    return value[0] == 'on';\n  }),\n});\n\nfunction submitForm(data) {\n  const sr = Object.assign({}, data);\n  if (data.phone) {\n    sr.phone = parsePhoneNumberFromString(data.phone, 'DE').number;\n  }\n\n  sr.acceptPrivacy =\n    Object.hasOwn(data, 'acceptPrivacy') && data.acceptPrivacy[0] == 'on';\n  sr.acceptNewsletter =\n    Object.hasOwn(data, 'acceptNewsletter') && data.acceptNewsletter[0] == 'on';\n\n  const response = SupportRequests.create(sr).then(\n    function onResult(res) {\n      alert('Nachricht wurde erfolgreich übermittelt!');\n      window.widget.setState({success: true});\n    },\n    function onError(err) {\n      var error =\n        'Die Nachricht konnte leider nicht abgeschickt werden! Bei Problemen wende dich bitte an den Support.';\n      alert(error);\n      window.widget.setState({error: error});\n    },\n  );\n}\n\nfunction ContactForm() {\n  return (\n    <Location>\n      {({navigate, location}) => (\n        <Formik\n          validationSchema={schema}\n          onSubmit={submitForm}\n          initialValues={{}}>\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} md=\"1\" controlId=\"validationGender\">\n                  <Form.Label>Anrede</Form.Label>\n                  <Form.Control\n                    type=\"select\"\n                    as=\"select\"\n                    name=\"gender\"\n                    value={values.gender}\n                    onChange={handleChange}\n                    isValid={touched.gender && !errors.gender}\n                    isInvalid={!!errors.gender}>\n                    <option value=\"none\">Bitte auswählen</option>\n                    <option value=\"Frau\">Frau</option>\n                    <option value=\"Herr\">Herr</option>\n                    <option value=\"divers\">divers</option>\n                  </Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.gender}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"1\" controlId=\"validationTitle\">\n                  <Form.Label>Titel</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"title\"\n                    value={values.title}\n                    onChange={handleChange}\n                    isValid={touched.title && !errors.title}\n                    isInvalid={!!errors.title}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.title}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"5\" controlId=\"validationFirstName\">\n                  <Form.Label>Vorname</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    isValid={touched.firstName && !errors.firstName}\n                    isInvalid={!!errors.firstName}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.firstName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"5\" controlId=\"validationLastName\">\n                  <Form.Label>Nachname</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    isValid={touched.lastName && !errors.lastName}\n                    isInvalid={!!errors.lastName}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.lastName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationEmail\">\n                  <Form.Label>E-Mail-Adresse</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    isValid={touched.email && !errors.email}\n                    isInvalid={!!errors.email}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationPhone\">\n                  <Form.Label>Telefon</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"phone\"\n                    value={values.phone}\n                    onChange={handleChange}\n                    isValid={touched.phone && !errors.phone}\n                    isInvalid={!!errors.phone}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.phone}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md=\"8\" controlId=\"validationSubject\">\n                  <Form.Label>Betreff</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"subject\"\n                    value={values.subject}\n                    onChange={handleChange}\n                    isInvalid={!!errors.subject}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.subject}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"4\" controlId=\"validationInstitution\">\n                  <Form.Label>An wen richtet sich die Anfrage?</Form.Label>\n                  <Form.Control\n                    type=\"select\"\n                    as=\"select\"\n                    placeholder=\"An wen richtet sich die Anfrage?\"\n                    name=\"institution\"\n                    value={values.institution}\n                    onChange={handleChange}\n                    isValid={touched.institution && !errors.institution}\n                    isInvalid={!!errors.institution}>\n                    <option value=\"none\">Bitte auswählen</option>\n                    <option value=\"BW\">LV Baden-Württemberg</option>\n                    <option value=\"BY\">LV Bayern</option>\n                    <option value=\"BE\">LV Berlin</option>\n                    <option value=\"BB\">LV Brandenburg</option>\n                    <option value=\"HB\">LV Bremen</option>\n                    <option value=\"HH\">LV Hamburg</option>\n                    <option value=\"HE\">LV Hessen</option>\n                    <option value=\"MV\">LV Mecklenburg-Vorpommern</option>\n                    <option value=\"NI\">LV Niedersachsen</option>\n                    <option value=\"NW\">LV Nordrhein-Westfalen</option>\n                    <option value=\"RP\">LV Rheinland-Pfalz</option>\n                    <option value=\"SL\">LV Saarland</option>\n                    <option value=\"SN\">LV Sachsen</option>\n                    <option value=\"ST\">LV Sachsen-Anhalt</option>\n                    <option value=\"SH\">LV Schleswig-Holstein</option>\n                    <option value=\"TH\">LV Thüringen</option>\n                    <option value=\"DE\">Bundesverband</option>\n                  </Form.Control>\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.institution}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md=\"12\" controlId=\"validationMessage\">\n                  <Form.Label>Nachricht</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows=\"6\"\n                    name=\"message\"\n                    value={values.message}\n                    onChange={handleChange}\n                    isValid={touched.message && !errors.message}\n                    isInvalid={!!errors.message}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.message}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group\n                  as={Col}\n                  md=\"12\"\n                  controlId=\"validationAcceptPrivacy\">\n                  <h3>Datenschutzbestimmung:</h3>\n                  Ich willige ein, dass DIE FÖDERALEN als verantwortliche\n                  Stelle, die hier erhobenen personenbezogenen Daten\n                  ausschließlich zum Zwecke der Beantwortung der jeweiligen\n                  Anfrage durch die Partei verarbeitet und genutzt werden. Eine\n                  Übermittlung von Daten an Partnerorganisationen wie z.B. den\n                  Landesverbänden findet im Rahmen der Beantwortung der Anfrage\n                  im beschränkten Maße statt. Diese Datenübermittlungen sind\n                  notwendig zum Zwecke der Organisation. Eine Datennutzung für\n                  Werbezwecke findet nicht statt. Die Verarbeitung erfolgt auf\n                  Basis des BDSG Neu und der DSGVO. Ohne eine Zustimmung zu den\n                  Datenschutzbestimmungen kann die Anfrage nicht bearbeitet\n                  werden. Weitere Informationen zum Thema Datenschutz finden Sie\n                  im Internet unter www.foederalen.de/datenschutz Diese\n                  Einwilligung kann jederzeit schriftlich für die Zukunft\n                  widerrufen werden.\n                  <br />\n                  <a href=\"/datenschutz\" target=\"_blank\">\n                    Datenschutzbestimmung öffnen\n                  </a>\n                  <Form.Check\n                    required\n                    name=\"acceptPrivacy\"\n                    label=\"Ich stimme der Datenschutzbestimmung zu.\"\n                    onChange={handleChange}\n                    isValid={touched.acceptPrivacy && !errors.acceptPrivacy}\n                    isInvalid={!!errors.acceptPrivacy}\n                    feedback={errors.acceptPrivacy}\n                    id=\"validationAcceptPrivacy0\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group\n                  as={Col}\n                  md=\"12\"\n                  controlId=\"validationAcceptNewsletter\">\n                  <Form.Check\n                    required\n                    name=\"acceptNewsletter\"\n                    label=\"Ja, ich möchte in den DIE FÖDERALEN Newsletter-Verteiler eingetragen werden.\"\n                    onChange={handleChange}\n                    isValid={\n                      touched.acceptNewsletter && !errors.acceptNewsletter\n                    }\n                    isInvalid={!!errors.acceptNewsletter}\n                    feedback={errors.acceptNewsletter}\n                    id=\"validationAcceptNewsletter0\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Button type=\"submit\">Abschicken</Button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Location>\n  );\n}\n\nclass ContactFormWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {success: false, error: false};\n  }\n\n  componentDidMount() {\n    window.widget = this;\n  }\n\n  render() {\n    if (!this.state.success) {\n      return (\n        <div>\n          <Title title=\"Kontakt - Die Föderalen\" url={createUrl('/kontakt')} />\n          <TitleRow>\n            <Col>\n              <h1>Kontakt</h1>\n            </Col>\n          </TitleRow>\n          <ContentRow>\n            <Col>\n              <Text>\n                Um uns eine Nachricht zu schicken, gibt hier einfach deine\n                Nachricht ein.\n              </Text>\n              {this.state.error && (\n                <ContentRow>\n                  <Col>\n                    <Alert variant=\"danger\">{this.state.error}</Alert>\n                  </Col>\n                </ContentRow>\n              )}\n            </Col>\n          </ContentRow>\n          <ContentRow>\n            <Col>\n              <ContactForm />\n            </Col>\n          </ContentRow>\n          <ContentRow>\n            <Col>\n              <br />\n              <h2>per E-Mail:</h2>\n              <h3>Allgemein</h3>\n              <p>info [at] foederalen.de</p>\n              <h3>Kündigung</h3>\n              <p>kuendigung [at] foederalen.de</p>\n              <h3>Spenden</h3>\n              <p>spenden [at] foederalen.de</p>\n            </Col>\n          </ContentRow>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Title\n            title=\"Die Nachricht wurde verschickt! - Die Föderalen\"\n            url={createUrl('/kontakt')}\n          />\n          <TitleRow>\n            <Col>\n              <h1>Die Nachricht wurde erfolgreich verschickt!</h1>\n            </Col>\n          </TitleRow>\n          <ContentRow>\n            <Col>\n              <Text>\n                Vielen Dank! Deine Nachricht wurde an den Support geschickt. Wir\n                werden dich so schnell wie möglich kontaktieren.\n              </Text>\n            </Col>\n          </ContentRow>\n        </div>\n      );\n    }\n  }\n}\n\nclass Kontakt extends Component<Props> {\n  render() {\n    return (\n      <DefaultLayout navigation={navigation}>\n        <ContactFormWidget />\n      </DefaultLayout>\n    );\n  }\n}\n\nexport default Kontakt;\n"],"names":["TitleRow","_styled","Row","target","name","styles","ContentRow","Text","schema","Yup","gender","required","oneOf","title","trim","max","matches","firstName","min","lastName","email","phone","test","value","parsePhoneNumberFromString","isValid","error","institution","subject","message","acceptPrivacy","transform","originalvalue","acceptNewsletter","submitForm","data","sr","Object","assign","number","hasOwn","SupportRequests","create","then","res","alert","window","widget","setState","success","err","ContactForm","___EmotionJSX","Location","_ref","navigate","location","Formik","validationSchema","onSubmit","initialValues","_ref2","handleSubmit","handleChange","handleBlur","values","touched","errors","Form","noValidate","Group","as","Col","md","controlId","Label","Control","type","onChange","isInvalid","Feedback","placeholder","rows","href","Check","label","feedback","id","Button","ContactFormWidget","Component","constructor","props","super","this","state","componentDidMount","render","Title","url","createUrl","Alert","variant","Kontakt","DefaultLayout","navigation"],"sourceRoot":""}